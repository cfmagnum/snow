package com.itsm.implementation;

public class AppConfig {
	
	@Bean
	DefaultConnectionContext connectionContext(@Value("${cf.apiHost}") String apiHost) {
	    return DefaultConnectionContext.builder()
	        .apiHost(apiHost)
	        .build();
	}

	@Bean
	PasswordGrantTokenProvider tokenProvider(@Value("${cf.username}") String username,
	                                         @Value("${cf.password}") String password) {
	    return PasswordGrantTokenProvider.builder()
	        .password(password)
	        .username(username)
	        .build();
	}
	@Bean
	ReactorCloudFoundryClient cloudFoundryClient(ConnectionContext connectionContext, TokenProvider tokenProvider) {
	    return ReactorCloudFoundryClient.builder()
	        .connectionContext(connectionContext)
	        .tokenProvider(tokenProvider)
	        .build();
	}

	@Bean
	ReactorDopplerClient dopplerClient(ConnectionContext connectionContext, TokenProvider tokenProvider) {
	    return ReactorDopplerClient.builder()
	        .connectionContext(connectionContext)
	        .tokenProvider(tokenProvider)
	        .build();
	}

	@Bean
	ReactorUaaClient uaaClient(ConnectionContext connectionContext, TokenProvider tokenProvider) {
	    return ReactorUaaClient.builder()
	        .connectionContext(connectionContext)
	        .tokenProvider(tokenProvider)
	        .build();
	}
	Bean
	DefaultCloudFoundryOperations cloudFoundryOperations(CloudFoundryClient cloudFoundryClient,
	                                                     DopplerClient dopplerClient,
	                                                     UaaClient uaaClient,
	                                                     @Value("${cf.organization}") String organization,
	                                                     @Value("${cf.space}") String space) {
	    return DefaultCloudFoundryOperations.builder()
	            .cloudFoundryClient(cloudFoundryClient)
	            .dopplerClient(dopplerClient)
	            .uaaClient(uaaClient)
	            .organization(organization)
	            .space(space)
	            .build();
	}

}
